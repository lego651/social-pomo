{"version":3,"sources":["actions/userAction.js","actions/types.js","actions/index.js","pages/Login/index.jsx","utils/firebase.js","components/Pomodoro/index.jsx","utils/util.js","components/Chatroom/index.jsx","actions/roomAction.js","pages/Room/index.jsx","App.js","serviceWorker.js","reducers/userReducer.js","reducers/roomReducer.js","reducers/uiReducer.js","reducers/index.js","store/index.js","pages/SignUp/index.jsx","pages/Home/index.jsx","pages/Profile/index.jsx","utils/requiresAuth.js","index.js"],"names":["setAuthorizationHeader","token","FBIdToken","localStorage","setItem","axios","defaults","headers","common","getUserData","dispatch","type","get","then","res","payload","data","catch","err","console","log","logoutUser","removeItem","window","location","href","CONSTANTS","LOG_IN","GET_MESSAGES","Login","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","newUserData","email","state","password","loginUser","history","errors","nextProps","UI","this","className","Container","Row","Col","md","xs","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","isInvalid","Feedback","Button","variant","Component","connect","user","userData","post","push","response","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","Pomodoro","subscribeReadyCount","doc","readyCount","handleStart","handleReset","ref","firestore","collection","unsubsrcibe","sec","ready","on","prevState","interval","setInterval","count","clearInterval","unsubscribe","onSnapshot","time","Math","floor","round","color","onClick","getReady","getReset","Chatroom","onUpdateMessages","snapshot","messages","forEach","userHandle","content","createdAt","newMessage","username","addMessage","orderBy","map","m","key","messageId","TextField","label","fullWidth","profile","handle","Room","sm","baseURL","App","auth","Boolean","hostname","match","initialState","authenticated","loading","authReducer","action","roomReducer","combineReducers","userReducer","room","store","createStore","rootReducer","compose","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION__","SignUp","confirmPassword","signupUser","Home","Badge","pill","to","Profile","handleClick","ComposedComponent","Authenticate","_checkAndRedirect","redirect","React","jwtDecode","exp","Date","now","ReactDOM","render","exact","path","component","requiresAuth","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.64eee922.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n  LOG_IN,\n  SET_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n  MARK_NOTIFICATIONS_READ\n} from './types';\n\nexport const loginUser = (userData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post('/login', userData)\n    .then((res) => {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push('/room');\n    })\n    .catch((err) => {\n      console.log(err);\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const signupUser = (newUserData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post('/signup', newUserData)\n    .then((res) => {\n      console.log(res);\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push('/room');\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nconst setAuthorizationHeader = (token) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};\n\nexport const getUserData = () => (dispatch) => {\n  dispatch({ type: LOADING_USER });\n  axios\n    .get('/user')\n    .then((res) => {\n      dispatch({\n        type: SET_USER,\n        payload: res.data\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem('FBIdToken');\n  delete axios.defaults.headers.common['Authorization'];\n  dispatch({ type: SET_UNAUTHENTICATED });\n  window.location.href = '/login';\n};\n","// auth reducer types\nexport const LOG_IN = 'LOG_IN';\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\n\n// UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\n","export * from './userAction';\nexport * from './roomAction';\n\nexport const CONSTANTS = {\n    LOG_IN: 'LOG_IN',\n    GET_MESSAGES: 'GET_MESSAGES',\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n\nimport { loginUser } from '../../actions';\nimport './style.scss'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newUserData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    this.props.loginUser(newUserData, this.props.history);\n  }\n  render(){\n    const { errors } = this.state;\n    return(\n      <div className=\"login-container\">\n        <Container>\n          <Row>\n            <Col> </Col>\n            <Col md={6} xs={12}>\n              <div className=\"signup-form\">\n                <Form onSubmit={(e) => {this.handleSubmit(e)}}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Email address\n                    </Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      placeholder=\"Enter email\"\n                      name=\"email\"\n                      onChange={(e) => {this.handleChange(e)}}\n                      isInvalid={!!errors.email}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.email}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>\n                      Password\n                    </Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      onChange={(e) => {this.handleChange(e)}}\n                      isInvalid={!!errors.password}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.password}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\">\n                    Log In\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n            <Col> </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst settings = {timestampsInSnapshots: true};\n\n// // Official Recommended Settings\n// // Your web app's Firebase configuration\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyBuRc03LvtY55WHAkzyUfaNInvRPsp5Enc\",\n//   authDomain: \"social-pomo-94112.firebaseapp.com\",\n//   databaseURL: \"https://social-pomo-94112.firebaseio.com\",\n//   projectId: \"social-pomo-94112\",\n//   storageBucket: \"social-pomo-94112.appspot.com\",\n//   messagingSenderId: \"105418250972\",\n//   appId: \"1:105418250972:web:ac64214fc0c27528bdf219\",\n//   measurementId: \"G-2JGFMCP86V\"\n// };\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nconst config = {\n  apiKey: \"AIzaSyBuRc03LvtY55WHAkzyUfaNInvRPsp5Enc\",\n  authDomain: \"social-pomo-94112.firebaseapp.com\",\n  databaseURL: \"https://social-pomo-94112.firebaseio.com\",\n  projectId: \"social-pomo-94112\",\n  storageBucket: \"social-pomo-94112.appspot.com\",\n  messagingSenderId: \"105418250972\"\n};\nfirebase.initializeApp(config);\n// firebase.analytics();\nfirebase.firestore().settings(settings);\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\n\nimport { parseTime } from '../../utils/util.js';\nimport firebase from '../../utils/firebase.js';\nimport './style.css';\n\nclass Pomodoro extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('meta').doc('us');\n    this.unsubsrcibe = null;\n    this.state = {\n      sec: 10,\n      ready: false,\n      readyCount: 0,\n      on: false,\n    }\n  }\n  count() {\n    if(this.state.on) {\n      if(this.state.sec > 0) {\n        this.setState(prevState => ({ sec: prevState.sec - 1 }))\n      }\n    } else {\n      this.setState({\n        sec: 0,\n        on: false\n      })\n    }\n  }\n  handleStart() {\n    this.setState({\n      on: true\n    })\n    this.interval = setInterval(() => {this.count()}, 1000);\n  }\n  // handlePause() {\n  //   this.setState({\n  //     on: false,\n  //   })\n  //   clearInterval(this.interval);\n  // }\n  handleReset() {\n    this.setState({\n      sec: 10,\n      on: false\n    })\n    clearInterval(this.interval);\n  }\n  subscribeReadyCount = (doc) => {\n    this.setState({\n      readyCount: doc.data().readyCount,\n    })\n    if(doc.data().readyCount === 2) {\n      this.handleStart();\n    }\n    if(doc.data().readyCount === 0) {\n      this.handleReset();\n    }\n  }\n  getReady() {\n    axios\n      .get('/readyaddone')\n      .then((res) => {\n        // console.log(res);\n        this.setState({\n          ready: true\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  getReset() {\n    axios\n      .get('/readyminusone')\n      .then((res) => {\n        // console.log(res);\n        this.setState({\n          ready: false\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.subscribeReadyCount);\n  }\n  render(){\n    // 当 readyCount == 1的时候，有下面情况\n    // on == true & ready = true: 显示 Continue\n    // on == false & ready = true: 显示 Waiting...\n    // on == true & ready = false: 显示 waiting...\n    // on == false & ready = false: 显示 Ready...\n    console.log(this.state.readyCount);\n    return(\n      <div className=\"pomodoro-container\">\n        <h2> {parseTime(this.state.sec)} </h2>\n        {\n          this.state.readyCount === 0\n          ? // 如果readyCount === 0, 两边一定都是Ready!\n            <Button variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => { this.getReady() }}>\n              Ready!\n            </Button>\n          : // readyCount === 1 或者 2\n            this.state.readyCount === 1\n            ? // readyCount == 1\n              this.state.on && this.state.ready\n              ? // 如果on == true, 并且 ready == true, 才会显示Continue..,\n                <Button variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => { this.getReset() }}>\n                  Continue\n                </Button>\n              :\n                this.state.on == false && !this.state.ready// 此时显示Ready...\n                ?\n                  <Button variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => { this.getReady() }}>\n                    Ready!\n                  </Button>\n                : // 否则显示Waiting...\n                  <Button variant=\"contained\"\n                          color=\"primary\">\n                    Waiting...\n                  </Button>\n            : // 否则 readyCount == 2\n              <Button variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => { this.getReset() }}>\n                Continue\n              </Button>\n        }\n\n\n      </div>\n    )\n  }\n}\n\nexport default Pomodoro\n","\nexport const parseTime = (time) => {\n  let min = Math.floor(time / 60);\n  let sec = Math.round(time % 60);\n  return min + \" : \" + sec;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport firebase from '../../utils/firebase.js';\nimport './style.css';\nimport { addMessage } from '../../actions';\n\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\nimport { TextField, Button } from '@material-ui/core';\n\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('messages');\n    this.unsubscribe = null;\n    this.state = {\n      messages: [],\n      content: ''\n    }\n  }\n  onUpdateMessages = (snapshot) => {\n    const messages = [];\n    snapshot.forEach((doc) => {\n      messages.push({\n        userHandle: doc.data().userHandle,\n        content: doc.data().content,\n        createdAt: doc.data().createdAt\n      })\n    });\n    // messages.sort((a,b) => a.createdAt - b.createdAt);\n    this.setState({\n      messages\n    });\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const newMessage = {\n      userHandle: this.props.username,\n      content: this.state.content\n    }\n    this.props.addMessage(newMessage);\n    this.setState({\n      content: ''\n    })\n  }\n  componentDidMount() {\n    this.unsubscribe = this.ref.orderBy('createdAt').onSnapshot(this.onUpdateMessages);\n  }\n  render(){\n    return(\n      <div className=\"chatroom-container\">\n        {\n          this.state.messages.map(m =>\n            <div key={m.messageId}> {m.content} </div>\n          )\n        }\n        <div className=\"chatroom-input\">\n          <form onSubmit={(e) => {this.handleSubmit(e)}}>\n            <TextField\n              type=\"text\"\n              name=\"content\"\n              label=\"content\"\n              onChange={(e) => {this.handleChange(e)}}\n              value={this.state.content}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  username: state.user.profile.handle\n})\nconst mapDispatchToProps = (dispatch) => ({\n  addMessage: (newMessage) => dispatch(addMessage(newMessage)),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Chatroom);\n","import axios from 'axios';\nimport { CONSTANTS } from '../actions';\n\nexport const loginUser = (username) => {\n  return dispatch => {\n    return dispatch({\n      type: CONSTANTS.LOG_IN,\n      username,\n    })\n  }\n}\n\nexport const getMessages = () => (dispatch) => {\n  axios\n    .get('/messages')\n    .then((res) => {\n      dispatch({\n        type: CONSTANTS.GET_MESSAGES,\n        payload: res.data\n      })\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n}\n\nexport const addMessage = (newMessage) => (dispatch) => {\n  axios\n    .post('/message', newMessage)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n}\n\n// export const getReady = () => (dispatch) => {\n//   axios\n//     .get('/readyaddone')\n//     .then((res) => {\n//       console.log(res);\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     })\n// }\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport Pomodoro from '../../components/Pomodoro';\nimport Chatroom from '../../components/Chatroom';\n\nimport './style.scss';\n\nclass Room extends Component {\n  render(){\n    return(\n      <div className=\"room-container\">\n        <Row>\n          <Col md={6} sm={12}>\n            <Pomodoro />\n          </Col>\n          <Col md={6} sm={12}>\n            <Chatroom />\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default Room;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Pages\nimport Login from './pages/Login';\nimport Room from './pages/Room';\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://us-central1-social-pomo-94112.cloudfunctions.net/api';\n\nclass App extends Component {\n  render() {\n    const { username } = this.props\n    return (\n      <div className=\"app-container\">\n        {\n          username\n          ? <Room />\n          : <Login />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  username: state.auth.username\n})\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CONSTANTS } from '../actions';\n\nimport {\n  SET_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED\n} from '../actions/types';\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  profile: {}\n}\n\nconst authReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true\n      };\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    case CONSTANTS.LOG_IN:\n      return {\n        ...state,\n        username: action.username\n      };\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        profile: action.payload.profile\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer\n","import { CONSTANTS } from '../actions';\n\nconst initialState = {\n  messages: []\n}\n\nconst roomReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case CONSTANTS.GET_MESSAGES:\n      return {\n        ...state,\n        messages: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default roomReducer\n","import {\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  STOP_LOADING_UI\n} from '../actions/types';\n\nconst initialState = {\n  loading: false,\n  errors: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: null\n      };\n    case LOADING_UI:\n      return {\n        ...state,\n        loading: true\n      };\n    case STOP_LOADING_UI:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport roomReducer from './roomReducer';\nimport uiReducer from './uiReducer';\n\nexport default combineReducers({\n  user: userReducer,\n  room: roomReducer,\n  UI: uiReducer\n});\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport rootReducer from '../reducers'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunkMiddleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n  // compose(\n  //   applyMiddleware(thunkMiddleware)\n  // )\n)\n\nexport default store\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n\nimport { signupUser } from '../../actions';\nimport './style.scss'\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {}\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newUserData = {\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      handle: this.state.handle\n    };\n    this.props.signupUser(newUserData, this.props.history);\n  }\n  render(){\n    const { errors } = this.state;\n    return(\n      <div className=\"signup-container\">\n        <Container>\n          <Row>\n            <Col> </Col>\n            <Col md={6} xs={12}>\n              <div className=\"signup-form\">\n                <Form onSubmit={(e) => {this.handleSubmit(e)}}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Email address\n                    </Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      placeholder=\"Enter email\"\n                      name=\"email\"\n                      onChange={(e) => {this.handleChange(e)}}\n                      isInvalid={!!errors.email}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.email}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>\n                      Password\n                    </Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      onChange={(e) => {this.handleChange(e)}}\n                      isInvalid={!!errors.password}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.password}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>\n                      Confirm Password\n                    </Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      name=\"confirmPassword\"\n                      onChange={(e) => {this.handleChange(e)}}\n                      isInvalid={!!errors.confirmPassword}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.confirmPassword}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Username\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      name=\"handle\"\n                      onChange={(e) => {this.handleChange(e)}}\n                      isInvalid={!!errors.handle}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.handle}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\">\n                    Sign Up\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n            <Col> </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  UI: state.UI\n});\n\nexport default connect(\n  mapStateToProps,\n  { signupUser }\n)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Badge, Button } from 'react-bootstrap';\n\nimport './style.scss';\n\nclass Home extends Component {\n  render(){\n    return(\n      <div className=\"signup-container\">\n        <Badge pill variant=\"success\"> Home </Badge>\n        <Badge pill variant=\"success\"> <Link to=\"/room\"> Room </Link> </Badge>\n        <Badge pill variant=\"success\"> <Link to=\"/signup\"> signup </Link> </Badge>\n        <Badge pill variant=\"success\"> <Link to=\"/login\"> login </Link> </Badge>\n        <Badge pill variant=\"success\"> <Link to=\"/profile\"> Profile </Link> </Badge>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Button } from 'react-bootstrap';\n\nimport { logoutUser } from '../../actions'\nimport './style.scss';\n\nclass Profile extends Component {\n  handleClick = (e) => {\n    this.props.logoutUser();\n  }\n  render(){\n    return(\n      <div className=\"signup-container\">\n        <Badge pill variant=\"success\"> Profile </Badge>\n        {this.props.user.profile.handle}\n        <Button\n          variant=\"primary\"\n          onClick={() => { this.handleClick() }}>\n          log out\n        </Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Profile);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport default function (ComposedComponent) {\n  class Authenticate extends React.Component {\n    static propTypes = {\n      authenticated: PropTypes.bool,\n      redirect: PropTypes.func.isRequired\n    };\n\n    componentDidMount() {\n      this._checkAndRedirect();\n    }\n\n    componentDidUpdate() {\n      this._checkAndRedirect();\n    }\n\n    _checkAndRedirect() {\n      const { authenticated, redirect } = this.props;\n      console.log('1 is called...');\n\n      if (!authenticated) {\n        console.log('2 is called...');\n        this.props.redirect();\n      }\n    }\n\n    render() {\n      return (\n        <div>\n          { this.props.authenticated ? <ComposedComponent {...this.props} /> : null }\n        </div>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      authenticated: state.user.authenticated\n    };\n  };\n\n\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => { window.location.href = '/login' }\n  });\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Authenticate);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport jwtDecode from 'jwt-decode';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport SignUp from './pages/SignUp';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport Login from './pages/Login';\nimport Room from './pages/Room';\nimport { logoutUser, getUserData } from './actions';\nimport { SET_AUTHENTICATED } from './actions/types';\nimport requiresAuth from './utils/requiresAuth';\n\naxios.defaults.baseURL = 'https://us-central1-social-pomo-94112.cloudfunctions.net/api';\n\nconst token = localStorage.FBIdToken;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/profile\" component={requiresAuth(Profile)} />\n        <Route exact path=\"/room\" component={requiresAuth(Room)} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}